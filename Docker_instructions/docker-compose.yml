version: '3.8'

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - mynetwork


  price_publisher:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "python app_code/price_feed/price_publisher.py"
    working_dir: /app
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  cache_DB:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "python app_code/redis_cache/cache_database.py"
    working_dir: /app
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  main0:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "uvicorn app_code.main:app --reload --host 0.0.0.0 --port 8000"
    working_dir: /app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  main1:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "uvicorn app_code.main:app --reload --host 0.0.0.0 --port 8001"
    working_dir: /app
    ports:
      - "8001:8001"
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  main2:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "uvicorn app_code.main:app --reload --host 0.0.0.0 --port 8002"
    working_dir: /app
    ports:
      - "8002:8002"
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  main3:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "uvicorn app_code.main:app --reload --host 0.0.0.0 --port 8003"
    working_dir: /app
    ports:
      - "8003:8003"
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  main4:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "uvicorn app_code.main:app --reload --host 0.0.0.0 --port 8004"
    working_dir: /app
    ports:
      - "8004:8004"
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  main5:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "uvicorn app_code.main:app --reload --host 0.0.0.0 --port 8005"
    working_dir: /app
    ports:
      - "8005:8005"
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  main6:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "uvicorn app_code.main:app --reload --host 0.0.0.0 --port 8006"
    working_dir: /app
    ports:
      - "8006:8006"
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  main7:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "uvicorn app_code.main:app --reload --host 0.0.0.0 --port 8007"
    working_dir: /app
    ports:
      - "8007:8007"
    depends_on:
      - redis
      - mongo

  main8:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "uvicorn app_code.main:app --reload --host 0.0.0.0 --port 8008"
    working_dir: /app
    ports:
      - "8008:8008"
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  main9:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "uvicorn app_code.main:app --reload --host 0.0.0.0 --port 8009"
    working_dir: /app
    ports:
      - "8009:8009"
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork

      
  main10:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "uvicorn app_code.main:app --reload --host 0.0.0.0 --port 8010"
    working_dir: /app
    ports:
      - "8010:8010"
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  positions_ag:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "python app_code/position_agg/position_agg.py"
    working_dir: /app
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  mongo_service:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "python -m app_code.mongo.mongo"
    working_dir: /app
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  Streamlit_UI:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "streamlit run app_code/authorization/streamlit_main.py"
    working_dir: /app
    ports:
      - "8501:8501"
    depends_on:
      - redis
      - main0
      - main1
      - main2
      - main3
      - main4
      - main5
      - main6
      - main7
      - main8
      - main9
      - main10
    networks:
      - mynetwork


  Profits_and_Losses:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "python app_code/PNL/profits_n_losses.py"
    working_dir: /app
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  Risk:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "python app_code/risk_calc/risk_service.py"
    working_dir: /app
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


  Position_Joiner:
    image: ghcr.io/jacobborenstein/rt-trade-and-risk-v2/project:latest
    command: sh -c "python app_code/redis_cache/position_joiner.py"
    working_dir: /app
    depends_on:
      - redis
      - mongo
    networks:
      - mynetwork


volumes:
  mongo_data:

networks:
  mynetwork:
    driver: bridge
